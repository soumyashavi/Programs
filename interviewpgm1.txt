Rotate array to a given pivot (Solution)
Determine if any two integers in array sum to given integer (Solution)
Sort an array in descending order (Solution)
Reverse an array (Solution)
Find majority element in an unsorted array (Solution)
Merge two sorted arrays into one (Solution)
How to find missing number in integer array of 1 to 100?
Swap min and max element in integer array (Solution)
Move zeros to end of array (Solution)
How to check if array contains a duplicate number? (Solution)

int arr1[]={1,2,3,4}
int arr2[]={3,5,6}
int arr3[]=new int [arr1.length+arr2.length];
for(int i=0;i<arr1.length;i++)
{
arr3[i]=arr1[i];
}
for(int j=0;j<arr2.length;j++,i++)
{
arr3[i]=arr2[j];
}


maxnum=
minnum=
swap 



arr[]={1,3,4,5}
       0 1 2 3 4
for(int i=0;i<100;i++)
{
if(arr[i]!=i+1)//arr[0]!=0+1=>1=1,3!=2
{
console.writeline("missing number is",i+1);
}
}


{1,1,2,3}



count number of occurances in a sentence

using System;
public class Demo {
   public static void Main() {
      string str = "Website";
      Console.WriteLine("String: "+str);
      while (str.Length > 0) {
         Console.Write(str[0] + " = ");
         int count = 0;
         for (int j = 0; j < str.Length; j++) {
            if (str[0] == str[j]) {
               count++;
            }
         }
         Console.WriteLine(count);
         str = str.Replace(str[0].ToString(), string.Empty);
      }
      Console.ReadLine();
   }
}

str=str.replace(Str[0].tostring,string.empty)

output 
w-1
e-2

move zero to end
class Program  
{  
    static void Main(string[] args)  
    {  
        int[] array = new int[] { 3, 0, 0, 1, 2, 0, 4, 0 };  
        int[] result = Approach1(array);  
        //result is [ 3, 1, 2, 4, 0, 0, 0, 0 ]    
    }  
    static int[] Approach1(int[] array)  
    {  
        for (int i = 0; i < array.Length; i++)  
        {  
            //skip non-zero elements  
            if (array[i] != 0) 
                continue;  
            //look for the nearest non-zero  
            for (int j = i + 1 ; j < array.Length; j++)  
            {  
                if (array[j] == 0)  { 3, 0, 0, 1, 2, 0, 4, 0 }; 
				                       3,1,0,0
                    continue;  
                //swap it with our zero  
                array[i] = array[j]; //arr[i]=0 
                array[j] = 0;  
                break;  
            }  
        }  
        return array;  
    }  
}  





serach element in a array
public class Example
{
    public static void Main()
    {
        int[] array = { 1, 2, 3, 4, 5 };
        int target = 4;
 
        bool isExist = array.find(target);
        if (isExist) {
            Console.WriteLine("Element found in the array");
        }
        else {
            Console.WriteLine("Element not found in the given array");
        }
    }
}
 
/*insert an elemnt in an array
static public void Main()
    {
  
        int n = 10;
        int[] arr = new int[n];
        int i;
  
        // initial array of size 10
        for (i = 0; i < n; i++)
            arr[i] = i + 1;
  
        // print the original array
        for (i = 0; i < n; i++)
            Console.Write(arr[i] + " ");
        Console.WriteLine();
  
        // element to be inserted
        int x = 50;
  
        // position at which element 
        // is to be inserted
        int pos = 5;
  
        
        int[] newarr = new int[n + 1];
  
       
        for (i = 0; i < n + 1; i++) {
            if (i < pos - 1)
                newarr[i] = arr[i];
            else if (i == pos - 1)
                newarr[i] = x;
            else
                newarr[i] = arr[i - 1];
        }
  
        // print the updated array
        for (i = 0; i < n + 1; i++)
            Console.Write(newarr[i] + " ");
        Console.WriteLine();
    }
}

